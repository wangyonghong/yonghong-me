<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>永红的互联网手记</title>
  
  <subtitle>我相信好代码和好产品改变世界！</subtitle>
  <link href="http://yonghong.tech/atom.xml" rel="self"/>
  
  <link href="http://yonghong.tech/"/>
  <updated>2020-09-26T00:00:00.000Z</updated>
  <id>http://yonghong.tech/</id>
  
  <author>
    <name>王永红(Micheal Wang)</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何安装 Homebrew？</title>
    <link href="http://yonghong.tech/install/install-homebrew/"/>
    <id>http://yonghong.tech/install/install-homebrew/</id>
    <published>2020-09-26T00:00:00.000Z</published>
    <updated>2020-09-26T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Homebrew-是什么？"><a href="#Homebrew-是什么？" class="headerlink" title="Homebrew 是什么？"></a>Homebrew 是什么？</h2><p>Homebrew是一款自由及开放源代码的软件包管理系统，用以简化macOS系统上的软件安装过程，最初由马克斯·霍威尔（Max Howell）写成。因其可扩展性得到了一致好评，而在Ruby on Rails社区广为人知。</p><p>Homebrew使用GitHub，通过用户的贡献扩大对软件包的支持。2012年，Homebrew是GitHub上拥有最多新贡献者的项目。2013年，Homebrew同时成为GitHub上最多贡献者及最多已关闭问题的项目。</p><h2 id="相关网站"><a href="#相关网站" class="headerlink" title="相关网站"></a>相关网站</h2><p>官网：<span class="exturl" data-url="aHR0cHM6Ly9icmV3LnNoLw==">https://brew.sh/<i class="fa fa-external-link-alt"></i></span></p><p>官方GitHub仓库：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0hvbWVicmV3L2JyZXc=">https://github.com/Homebrew/brew<i class="fa fa-external-link-alt"></i></span></p><p>官方GitHub安装脚本：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0hvbWVicmV3L2luc3RhbGw=">https://github.com/Homebrew/install<i class="fa fa-external-link-alt"></i></span></p><p>国内定制安装脚本：<span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20vY3Vua2FpL0hvbWVicmV3Q04=">https://gitee.com/cunkai/HomebrewCN<i class="fa fa-external-link-alt"></i></span></p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>官方的安装方法：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/bin/</span>bash -c <span class="string">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&quot;</span></span><br></pre></td></tr></table></figure><p>国内定制的安装脚本：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/bin/</span>bash -c <span class="string">&quot;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)&quot;</span></span><br></pre></td></tr></table></figure><h2 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h2><p>如果是新手可能会遇到git没有安装的问题，一般情况只需要按照提示安装就可以了，但是也有例外，当出现</p><blockquote><p>不能安装该软件，因为当前无法从软件更新服务器获得。</p></blockquote><p><img src="https://up-img.yonghong.tech/pic/2020/09/25-12-19-%E6%88%AA%E5%B1%8F2020-09-25%20%E4%B8%8B%E5%8D%8812.15.04-yOZ7xD.png" alt="25-12-19-截屏2020-09-25下午12.15.04-yOZ7xD"></p><p>这种情况时，也不用慌，打开 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tLw==">https://developer.apple.com/<i class="fa fa-external-link-alt"></i></span> 网站，下载 Command Line Tools 安装就可以了。</p><p><img src="https://up-img.yonghong.tech/pic/2020/09/25-12-19-%E6%88%AA%E5%B1%8F2020-09-25%20%E4%B8%8B%E5%8D%8812.16.21-OZrMBN.png" alt="25-12-19-截屏2020-09-25下午12.16.21-OZrMBN"></p><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ul><li><a href="/install/install-iterm2/">如何安装 iTerm2？</a></li><li><a href="/install/install-oh-my-zsh/">如何安装 Oh My Zsh？</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Homebrew-是什么？&quot;&gt;&lt;a href=&quot;#Homebrew-是什么？&quot; class=&quot;headerlink&quot; title=&quot;Homebrew 是什么？&quot;&gt;&lt;/a&gt;Homebrew 是什么？&lt;/h2&gt;&lt;p&gt;Homebrew是一款自由及开放源代码的软件包管理系统，用以简化macOS系统上的软件安装过程，最初由马克斯·霍威尔（Max Howell）写成。因其可扩展性得到了一致好评，而在Ruby on Rails社区广为人知。&lt;/p&gt;
&lt;p&gt;Homebrew使用GitHub，通过用户的贡献扩大对软件包的支持。2012年，Homebrew是GitHub上拥有最多新贡献者的项目。2013年，Homebrew同时成为GitHub上最多贡献者及最多已关闭问题的项目。&lt;/p&gt;
&lt;h2 id=&quot;相关网站&quot;&gt;&lt;a href=&quot;#相关网站&quot; class=&quot;headerlink&quot; title=&quot;相关网站&quot;&gt;&lt;/a&gt;相关网站&lt;/h2&gt;&lt;p&gt;官网：&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9icmV3LnNoLw==&quot;&gt;https://brew.sh/&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;官方GitHub仓库：&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXRodWIuY29tL0hvbWVicmV3L2JyZXc=&quot;&gt;https://github.com/Homebrew/brew&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;官方GitHub安装脚本：&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXRodWIuY29tL0hvbWVicmV3L2luc3RhbGw=&quot;&gt;https://github.com/Homebrew/install&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;国内定制安装脚本：&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXRlZS5jb20vY3Vua2FpL0hvbWVicmV3Q04=&quot;&gt;https://gitee.com/cunkai/HomebrewCN&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="安装" scheme="http://yonghong.tech/categories/%E5%AE%89%E8%A3%85/"/>
    
    
    <category term="安装" scheme="http://yonghong.tech/tags/%E5%AE%89%E8%A3%85/"/>
    
    <category term="Install" scheme="http://yonghong.tech/tags/Install/"/>
    
    <category term="Homebrew" scheme="http://yonghong.tech/tags/Homebrew/"/>
    
    <category term="brew" scheme="http://yonghong.tech/tags/brew/"/>
    
    <category term="mirror" scheme="http://yonghong.tech/tags/mirror/"/>
    
    <category term="镜像" scheme="http://yonghong.tech/tags/%E9%95%9C%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>如何安装 iTerm2？</title>
    <link href="http://yonghong.tech/install/install-iterm2/"/>
    <id>http://yonghong.tech/install/install-iterm2/</id>
    <published>2020-09-26T00:00:00.000Z</published>
    <updated>2020-09-26T01:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="iTerm2-是什么？"><a href="#iTerm2-是什么？" class="headerlink" title="iTerm2 是什么？"></a>iTerm2 是什么？</h2><p>iTerm2 是终端仿真程序 iTerm 的替代品，支持 Mac OS 10.5 以及以上的版本。</p><p>简单来说就是一款漂亮的终端程序。</p><p>感受一下网友们配置的主题：</p><p><img src="https://up-img.yonghong.tech/pic/2020/09/25-14-42-BwYsU5-FbqgAm.jpg" alt="iTerm2 + Oh My Zsh"></p><a id="more"></a><h2 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a>官方网站</h2><p>官方网站：<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXRlcm0yLmNvbS8=">https://www.iterm2.com/<i class="fa fa-external-link-alt"></i></span></p><p>官方GitHub仓库：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2duYWNobWFuL2lUZXJtMg==">https://github.com/gnachman/iTerm2<i class="fa fa-external-link-alt"></i></span></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="从官网下载安装"><a href="#从官网下载安装" class="headerlink" title="从官网下载安装"></a>从官网下载安装</h3><p><span class="exturl" data-url="aHR0cHM6Ly9pdGVybTIuY29tL2Rvd25sb2Fkcy9zdGFibGUvbGF0ZXN0">https://iterm2.com/downloads/stable/latest<i class="fa fa-external-link-alt"></i></span></p><h3 id="用-Homebrew-安装"><a href="#用-Homebrew-安装" class="headerlink" title="用 Homebrew 安装"></a>用 Homebrew 安装</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span>cask <span class="keyword">install </span>iterm2</span><br></pre></td></tr></table></figure><p>Homebrew 的安装参考 <a href="/install/install-homebrew/">如何安装 Homebrew？</a></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><span class="exturl" data-url="aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAxNDk5Mjk0Nw==">iTerm2 + Oh My Zsh 打造舒适终端体验<i class="fa fa-external-link-alt"></i></span></li><li><a href="/install/install-homebrew/">如何安装 Homebrew？</a></li><li><a href="/install/install-oh-my-zsh/">如何安装 Oh My Zsh？</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;iTerm2-是什么？&quot;&gt;&lt;a href=&quot;#iTerm2-是什么？&quot; class=&quot;headerlink&quot; title=&quot;iTerm2 是什么？&quot;&gt;&lt;/a&gt;iTerm2 是什么？&lt;/h2&gt;&lt;p&gt;iTerm2 是终端仿真程序 iTerm 的替代品，支持 Mac OS 10.5 以及以上的版本。&lt;/p&gt;
&lt;p&gt;简单来说就是一款漂亮的终端程序。&lt;/p&gt;
&lt;p&gt;感受一下网友们配置的主题：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://up-img.yonghong.tech/pic/2020/09/25-14-42-BwYsU5-FbqgAm.jpg&quot; alt=&quot;iTerm2 + Oh My Zsh&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="安装" scheme="http://yonghong.tech/categories/%E5%AE%89%E8%A3%85/"/>
    
    
    <category term="安装" scheme="http://yonghong.tech/tags/%E5%AE%89%E8%A3%85/"/>
    
    <category term="Install" scheme="http://yonghong.tech/tags/Install/"/>
    
    <category term="Homebrew" scheme="http://yonghong.tech/tags/Homebrew/"/>
    
    <category term="brew" scheme="http://yonghong.tech/tags/brew/"/>
    
    <category term="iTerm2？" scheme="http://yonghong.tech/tags/iTerm2%EF%BC%9F/"/>
    
  </entry>
  
  <entry>
    <title>如何安装 Oh My Zsh？</title>
    <link href="http://yonghong.tech/install/install-oh-my-zsh/"/>
    <id>http://yonghong.tech/install/install-oh-my-zsh/</id>
    <published>2020-09-26T00:00:00.000Z</published>
    <updated>2020-09-26T02:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Oh-My-Zsh-是什么？"><a href="#Oh-My-Zsh-是什么？" class="headerlink" title="Oh My Zsh 是什么？"></a>Oh My Zsh 是什么？</h2><p>Oh My Zsh 是一个令人愉快的，开源的，社区驱动的框架，用于管理您的 Zsh 配置。它捆绑了成千上万的有用功能，助手，插件，主题以及一些让您大喊大叫的东西… </p><blockquote><p>“Oh My ZSH!”</p></blockquote><p>iTerm2 + Oh My Zsh 这个组合可以创造出无限可能，感受一下网友们配置的主题：</p><p><img src="https://up-img.yonghong.tech/pic/2020/09/25-14-42-BwYsU5-FbqgAm.jpg" alt="iTerm2 + Oh My Zsh"></p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="官方安装方法"><a href="#官方安装方法" class="headerlink" title="官方安装方法"></a>官方安装方法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者</span></span><br><span class="line">sh -c &quot;$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure><h3 id="Gitee镜像仓库安装方法"><a href="#Gitee镜像仓库安装方法" class="headerlink" title="Gitee镜像仓库安装方法"></a>Gitee镜像仓库安装方法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">REMOTE=https://gitee.com/mirrors/oh-my-zsh.git sh -c &quot;$(curl -fsSL https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh)&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者</span></span><br><span class="line">REMOTE=https://gitee.com/mirrors/oh-my-zsh.git sh -c &quot;$(wget -O- https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ul><li><a href="/install/install-homebrew/">如何安装 Homebrew？</a></li><li><a href="/install/install-iterm2/">如何安装 iTerm2？</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Oh-My-Zsh-是什么？&quot;&gt;&lt;a href=&quot;#Oh-My-Zsh-是什么？&quot; class=&quot;headerlink&quot; title=&quot;Oh My Zsh 是什么？&quot;&gt;&lt;/a&gt;Oh My Zsh 是什么？&lt;/h2&gt;&lt;p&gt;Oh My Zsh 是一个令人愉快的，开源的，社区驱动的框架，用于管理您的 Zsh 配置。它捆绑了成千上万的有用功能，助手，插件，主题以及一些让您大喊大叫的东西… &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Oh My ZSH!”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;iTerm2 + Oh My Zsh 这个组合可以创造出无限可能，感受一下网友们配置的主题：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://up-img.yonghong.tech/pic/2020/09/25-14-42-BwYsU5-FbqgAm.jpg&quot; alt=&quot;iTerm2 + Oh My Zsh&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="安装" scheme="http://yonghong.tech/categories/%E5%AE%89%E8%A3%85/"/>
    
    
    <category term="安装" scheme="http://yonghong.tech/tags/%E5%AE%89%E8%A3%85/"/>
    
    <category term="Install" scheme="http://yonghong.tech/tags/Install/"/>
    
    <category term="mirror" scheme="http://yonghong.tech/tags/mirror/"/>
    
    <category term="镜像" scheme="http://yonghong.tech/tags/%E9%95%9C%E5%83%8F/"/>
    
    <category term="Oh My Zsh" scheme="http://yonghong.tech/tags/Oh-My-Zsh/"/>
    
    <category term="oh-my-zsh" scheme="http://yonghong.tech/tags/oh-my-zsh/"/>
    
  </entry>
  
  <entry>
    <title>【release】PostgresSQL 13 正式发布！</title>
    <link href="http://yonghong.tech/release/postgresql-13/"/>
    <id>http://yonghong.tech/release/postgresql-13/</id>
    <published>2020-09-25T12:00:00.000Z</published>
    <updated>2020-09-25T12:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>PostgreSQL 全球开发组今天宣布PostgreSQL 13正式发布，作为世界上最先进的开源数据库，PostgresSQL 13是目前的最新版本。</p><p>PostgreSQL 13 在索引和查找方面进行了重大改进，有利于大型数据库系统，同时包括索引的空间节省和性能提高，使用聚合或分区的查询时的更快响应，使用增强的统计信息时更优化的查询计划，以及很多其他改进。</p><a id="more"></a><p>PostgreSQL 13除了具有强烈要求的功能（如并行清理和增量排序）外，还为不同大小的负载提供了更好的数据管理体验。此版本针对日常管理进行了优化，为应用程序开发人员提供了更多便利，并增强了安全性。</p><p>“PostgreSQL 13展示了我们全球社区在增强世界上最先进的开源关系数据库功能方面的协作和奉献精神。”，PostgreSQL核心团队成员Peter Eisentraut说， “每个发行版所带来的创新以及其在可靠性和稳定性方面的声誉，这是为什么越来越多的人选择在其应用程序中使用PostgreSQL的原因”。</p><p>PostgreSQL是一种创新的数据管理系统，以其可靠性和健壮性著称，得益于全球开发者社区 超过25年的开源开发，它已成为各种规模组织首选的开源关系型数据库。</p><h3 id="持续的性能提升"><a href="#持续的性能提升" class="headerlink" title="持续的性能提升"></a>持续的性能提升</h3><p>在先前PostgreSQL版本的基础上，PostgreSQL 13可以有效地处理标准数据库索引B-tree中的重复数据。这降低了B-tree索引所需的总体使用空间，同时提高了整体查询性能。</p><p>PostgreSQL 13引入了增量排序，其中查询中来自较早步骤的已排序数据可以加快后续步骤的排序。此外，PostgreSQL现在可以使用扩展的统计信息（通过CREATE STATISTICS访问）来创建增强带有OR子句和列表中的IN/ANY查找的查询计划。</p><p>在PostgreSQL 13中，更多类型的聚合和分组可以利用PostgreSQL的高效哈希聚合功能，因为具有大聚合的查询不必完全放在内存中。带有分区表的查询性能得到了提高，因为现在有更多情况可以修剪分区并且可以直接连接分区。</p><h3 id="管理优化"><a href="#管理优化" class="headerlink" title="管理优化"></a>管理优化</h3><p>清理(Vacuuming)是PostgreSQL管理的重要部分，它使数据库能够在更新和删除行之后回收存储空间。尽管之前的PostgreSQL版本已经完成了减轻清理开销的工作，但是清理过程也可能带来管理上的挑战。</p><p>PostgreSQL 13通过引入索引的并行清理来继续改进清理系统。除了它提供的清理性能优势外，由于管理员可以选择要运行的并行Worker进程的数量，因此可以针对特定工作负载调整此新功能的使用。除了这些性能带来的好处之外，数据插入现在还可以触发自动清理过程。</p><p>复制槽(Replication slots)用于防止预写日志（WAL）在备库收到之前被删除，可以在PostgreSQL 13中进行调整以指定要保留的WAL文件的最大数量，并有助于避免磁盘空间不足的错误。<br>PostgreSQL 13还增加了更多管理员可以监视数据库活动的方式，包括从EXPLAIN查看WAL使用情况的统计信息，基于流的备份进度，以及ANALYZE命令的进度。另外，还可以使用新的pg_verifybackup命令来检查pg_basebackup命令输出的完整性。</p><h3 id="便利的应用程序开发"><a href="#便利的应用程序开发" class="headerlink" title="便利的应用程序开发"></a>便利的应用程序开发</h3><p>PostgreSQL 13让使用来自不同数据源的PostgreSQL数据类型更加容易。此版本在SQL/JSON路径支持中添加了datetime()函数，该函数将有效的时间格式（例如ISO 8601字符串）转换为PostgreSQL本地类型。此外，UUID v4 生成函数gen_random_uuid()现在可以直接使用而无需安装任何扩展。<br>PostgreSQL的分区系统更加灵活，因为分区表完全支持逻辑复制和BEFORE行级触发器。</p><p>PostgreSQL 13中的FETCH FIRST语法现已扩展为可包含WITH TIES子句。指定时，WITH TIES包括基于ORDER BY子句的结果集中最后一行相匹配的任何其他行。</p><h3 id="安全增强"><a href="#安全增强" class="headerlink" title="安全增强"></a>安全增强</h3><p>PostgreSQL的扩展系统是其强大功能的关键组成部分，因为它允许开发人员扩展其功能。在以前的版本中，新的扩展只能由数据库超级用户安装。为了更轻松地利用PostgreSQL的可扩展性，PostgreSQL 13添加了”可信扩展”的概念，该概念允许数据库用户使用安装超级用户标记为”受信任”的扩展。某些内置扩展默认情况下标记为受信任，包括 pgcrypto， tablefunc， hstore等。</p><p>对于需要安全身份验证方法的应用程序，PostgreSQL 13允许客户端在使用SCRAM身份验证时要求通道绑定，并且PostgreSQL外部数据包装器(postgres_fdw)现在可以使用基于证书的身份验证。</p><h3 id="关于PostgreSQL"><a href="#关于PostgreSQL" class="headerlink" title="关于PostgreSQL"></a>关于PostgreSQL</h3><p>PostgreSQL是世界上最先进的开源数据库，它的全球社区是一个由成千上万的用户、开发人员、公司或其他组织组成的。PostgreSQL起源于加利福尼亚大学伯克利分校，已经有30多年的历史，并且以无与伦比的开发速度继续发展。PostgreSQL的成熟功能不仅与顶级商业数据库系统匹配，而且在高级数据库功能、可扩展性、安全性和稳定性方面超过了它们。</p><h3 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucG9zdGdyZXNxbC5vcmcvYWJvdXQvbmV3cy8yMDc3Lw==">PostgreSQL 13 Released!<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cDovL3d3dy5wb3N0Z3Jlcy5jbi92Mi9uZXdzL3ZpZXdvbmUvMS82Mzc=">PostgreSQL 13 正式发布<i class="fa fa-external-link-alt"></i></span></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;PostgreSQL 全球开发组今天宣布PostgreSQL 13正式发布，作为世界上最先进的开源数据库，PostgresSQL 13是目前的最新版本。&lt;/p&gt;
&lt;p&gt;PostgreSQL 13 在索引和查找方面进行了重大改进，有利于大型数据库系统，同时包括索引的空间节省和性能提高，使用聚合或分区的查询时的更快响应，使用增强的统计信息时更优化的查询计划，以及很多其他改进。&lt;/p&gt;</summary>
    
    
    
    <category term="release" scheme="http://yonghong.tech/categories/release/"/>
    
    
    <category term="release" scheme="http://yonghong.tech/tags/release/"/>
    
    <category term="PostgresSQL" scheme="http://yonghong.tech/tags/PostgresSQL/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】ab</title>
    <link href="http://yonghong.tech/linux-command/ab/"/>
    <id>http://yonghong.tech/linux-command/ab/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:00:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>Apache服务器的性能测试工具</p><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p><strong>ab命令</strong> 是一个测试你 Apache http 服务器的工具，你可以通过这个工具，指定一个单位时间内向 apache 发出的请求数量来看看你的 Apache 和机器配合的性能如何。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ab [ -A auth-username:password ] [ -c concurrency ] [ -C cookie-name=value</span><br><span class="line">] [ -d ] [ -e csv-file ] [ -g gnuplot-file ] [ -h ] [ -H custom-header ] [</span><br><span class="line">-i  ]  [  -k  ]  [  -n  requests  ] [ -p POST-file ] [ -P proxy-auth-user‐</span><br><span class="line">name:password ] [ -q ] [ -s ] [ -S ] [ -t timelimit ] [ -T content-type  ]</span><br><span class="line">[  -v verbosity] [ -V ] [ -w ] [ -x &lt;table&gt;-attributes ] [ -X proxy[:port]</span><br><span class="line">]  [  -y  &lt;tr&gt;-attributes  ]  [  -z   &lt;td&gt;-attributes   ]   [http://]host‐</span><br><span class="line">name[:port]/path</span><br></pre></td></tr></table></figure><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">-A auth-username:password</span><br><span class="line">      #  支持基本的验证证书,用户名和密码之间使用&quot;冒号&quot;                    :</span><br><span class="line">      # 分隔开,ab将以明文方式传送过去.不管服务器是不是需要</span><br><span class="line">      # ,也就是说你的服务器需要支持401认证.</span><br><span class="line"></span><br><span class="line">-c concurrency</span><br><span class="line">      # 同时向服务器端发送的请求数目，默认状态下是一次 只执行一个http请求.</span><br><span class="line"></span><br><span class="line">-C cookie-name=value</span><br><span class="line">      # Add a Cookie: line to the request. The argument is typically in the</span><br><span class="line">      # form of a name=value pair. This field is repeatable.</span><br><span class="line"></span><br><span class="line">-d    #  Do not display  the  &quot;percentage  served  within  XX  [ms]  table&quot;.</span><br><span class="line">      # (legacy support).</span><br><span class="line"></span><br><span class="line">-e csv-file</span><br><span class="line">      # Write  a  Comma  separated value (CSV) file which contains for each</span><br><span class="line">      # percentage (from 1% to 100%) the time (in milli seconds) it took to</span><br><span class="line">      # serve  that percentage of the requests. This is usually more useful</span><br><span class="line">      # than the &#x27;gnuplot&#x27; file; as the results are already &#x27;binned&#x27;.</span><br><span class="line"></span><br><span class="line">-g gnuplot-file</span><br><span class="line">      # Write all measured values out as a &#x27;gnuplot&#x27; or TSV  (Tab  separate</span><br><span class="line">      # values)  file.  This file can easily be imported into packages like</span><br><span class="line">      # Gnuplot, IDL, Mathematica, Igor or even Excell. The labels  are  on</span><br><span class="line">      # the first line of the file.</span><br><span class="line">-h    # 显示使用说明</span><br><span class="line">-H custom-header</span><br><span class="line">      # 向请求包追加附加的标题字串.此参数应该是有效的标题         行(header</span><br><span class="line">      # line)形式,通常使用冒号&quot;:&quot;来分隔有效配对 (valid  pair)例如  &#x27;Accept-</span><br><span class="line">      # Encoding: zip/zop;8 bit&#x27;;</span><br><span class="line"></span><br><span class="line">-i    # 使用一个 http 头(HEAD) 来替换 GET方法.不可以掺入POST 方法</span><br><span class="line"></span><br><span class="line">-k    #  允许http      KeepAlive      ；也就是说执行多个请求在一个      http</span><br><span class="line">      # 会话当中，默认是不允许的也就是no KeepAlive啦;)</span><br><span class="line"></span><br><span class="line">-n requests</span><br><span class="line">      # 执行一次测试会话的时候所发出的请求数目,默认是执行一个单一的请求</span><br><span class="line">      # 当然了这样的测试结果也就没什么意义了</span><br><span class="line"></span><br><span class="line">-p POST-file</span><br><span class="line">      # 测试程序也就是ab,将向Apache server发送带有HTTP POST 的请求.</span><br><span class="line"></span><br><span class="line">-P proxy-auth-username:password</span><br><span class="line">      # 当需要通过代理测试一台 HTTP 服务器的时候而你的代理</span><br><span class="line">      # 又需要用户名密码验证,这时你可以使用这个选项,同样</span><br><span class="line">      # 用户名与密码之间使用冒号&quot;:&quot;分隔开,ab将之以明文的方式</span><br><span class="line">      # 发送出去,当然,前提是你的代理是处于407认证状态的</span><br><span class="line"></span><br><span class="line">-q    #  When processing more than 150 requests, ab outputs a progress count</span><br><span class="line">      # on  stderr  every  10% or 100 requests or so. The -q flag will sup‐</span><br><span class="line">      # press these messages.</span><br><span class="line"></span><br><span class="line">-s    #  When compiled in (ab -h will show you) use the SSL protected  https</span><br><span class="line">      # rather  than  the  http  protocol. This feature is experimental and</span><br><span class="line">      # very rudimentary. You probably do not want to use it.</span><br><span class="line"></span><br><span class="line">-S    #  Do not display the median and standard deviation values,  nor  dis‐</span><br><span class="line">      # play  the  warning/error  messages  when the average and median are</span><br><span class="line">      # more than one or two times the standard deviation  apart.  And  de‐</span><br><span class="line">      # fault to the min/avg/max values. (legacy support).</span><br><span class="line"></span><br><span class="line">-t timelimit</span><br><span class="line">      #  设置测试的时间的长短，使用这个选项ab将自动设置</span><br><span class="line">      # 测试请求会话数目为50000，然后以你设置的时间为</span><br><span class="line">      # 固定周期.默认状态下是没有时限的，也就是直到完成</span><br><span class="line">      # 你所设置的请求数目为止.</span><br><span class="line"></span><br><span class="line">-T content-type</span><br><span class="line">      # 内容类型标头,使用在POST数据的时候.</span><br><span class="line"></span><br><span class="line">-v verbosity</span><br><span class="line">      # 设置冗余级别,4级打印出每个请求标头的详细信息,</span><br><span class="line">      # 3级打印出回应代码(例如,404,200),2级打印出警告 信息和指示消息</span><br><span class="line"></span><br><span class="line">-V    # 显示版本号并且退出</span><br><span class="line">-w    # 打印输出结果到HTML表中. 默认的表是两列n行白底黑框</span><br><span class="line"></span><br><span class="line">-x &lt;table&gt;-attributes</span><br><span class="line">      # 使用字串来描述表的属性,该属性字串应该插入到&lt;table 这里 &gt;</span><br><span class="line"></span><br><span class="line">-X proxy[:port]</span><br><span class="line">      # Use a proxy server for the requests.</span><br><span class="line"></span><br><span class="line">-y &lt;tr&gt;-attributes</span><br><span class="line">      # 用于生成html表格每行的属性名 (&lt;tr&gt;)</span><br><span class="line"></span><br><span class="line">-z &lt;td&gt;-attributes</span><br><span class="line">      # 用于生成html表格每列的属性名 (&lt;td&gt;)</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>主机：被测试主机。</p><!-- Linux命令行搜索引擎：https://jaywcjlove.github.io/linux-command/ -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Apache服务器的性能测试工具&lt;/p&gt;
&lt;h2 id=&quot;补充说明&quot;&gt;&lt;a href=&quot;#补充说明&quot; class=&quot;headerlink&quot; title=&quot;补充说明&quot;&gt;&lt;/a&gt;补充说明&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;ab命令&lt;/strong&gt; 是一个测试你 Apache ht</summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="ab" scheme="http://yonghong.tech/tags/ab/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】accept</title>
    <link href="http://yonghong.tech/linux-command/accept/"/>
    <id>http://yonghong.tech/linux-command/accept/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:01:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>指示打印系统接受发往指定目标打印机的打印任务</p><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p><strong>accept命令</strong> 属于CUPS套件，用于指示打印系统接受发往指定目标打印机的打印任务。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">accept</span><span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">-E：当连接到服务器时强制加密；</span></span><br><span class="line"><span class="deletion">-U：指定连接服务器时使用的用户名；</span></span><br><span class="line"><span class="deletion">-h：指定连接服务器名和端口号。</span></span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>目标：指定目标打印机。</p><!-- Linux命令行搜索引擎：https://jaywcjlove.github.io/linux-command/ -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;指示打印系统接受发往指定目标打印机的打印任务&lt;/p&gt;
&lt;h2 id=&quot;补充说明&quot;&gt;&lt;a href=&quot;#补充说明&quot; class=&quot;headerlink&quot; title=&quot;补充说明&quot;&gt;&lt;/a&gt;补充说明&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;accept命令&lt;/strong&gt; 属于CUPS</summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="accept" scheme="http://yonghong.tech/tags/accept/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】ack</title>
    <link href="http://yonghong.tech/linux-command/ack/"/>
    <id>http://yonghong.tech/linux-command/ack/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:01:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>比grep好用的文本搜索工具</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ubuntu下要安装ack-grep，因为在debian系中，ack这个名字被其他的软件占用了。</span></span><br><span class="line">sudo apt-get install ack-grep</span><br><span class="line"><span class="meta">#</span><span class="bash"> alpine Linux-apk软件包管理器 安装 ack</span></span><br><span class="line">apk install ack</span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>这些参数在linux上的适用频率是相当高的，尤其是你用vim做为IDE的话</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-c(统计)/ -i(忽略大小)/ -h(不显示名称)/</span><br><span class="line">-l(只显文件名)/ -n(加行号)/ -v(显示不匹配)</span><br></pre></td></tr></table></figure><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>ack官网列出了这工具的5大卖点：</p><ol><li>速度非常快,因为它只搜索有意义的东西。</li><li>更友好的搜索，忽略那些不是你源码的东西。</li><li>为源代码搜索而设计，用更少的击键完成任务。</li><li>非常轻便，移植性好。</li><li>免费且开源</li></ol><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>在记忆的时候大体上可以分为这几个部分：</p><blockquote><p>Searching 代码搜索<br>Search output 搜索结果处理<br>File presentation 文件展示<br>File finding 文件查找<br>File inclusion/exclusion 文件过滤  </p></blockquote><p>grep常用操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep -r &#x27;hello_world&#x27; # 简单用法</span><br><span class="line">grep &#x27;^hello_world&#x27; . # 简单正则</span><br><span class="line">ls -l | grep .py # 管道用法</span><br></pre></td></tr></table></figure><h3 id="Searching"><a href="#Searching" class="headerlink" title="Searching"></a>Searching</h3><p>简单的文本搜索，默认是递归的。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ack-<span class="keyword">grep</span> hello</span><br><span class="line">ack-<span class="keyword">grep</span> -i hello</span><br><span class="line">ack-<span class="keyword">grep</span> -v hello</span><br><span class="line">ack-<span class="keyword">grep</span> -w hello</span><br><span class="line">ack-<span class="keyword">grep</span> -Q <span class="string">&#x27;hello*&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="Search-File"><a href="#Search-File" class="headerlink" title="Search File"></a>Search File</h3><p>对搜索结果进行处理，比如只显示一个文件的一个匹配项，或者xxx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ack-grep --line=1       # 输出所有文件第二行</span><br><span class="line">ack-grep -l &#x27;hello&#x27;     # 包含的文件名</span><br><span class="line">ack-grep -L &#x27;print&#x27;     # 非包含文件名</span><br></pre></td></tr></table></figure><h3 id="File-presentation"><a href="#File-presentation" class="headerlink" title="File presentation"></a>File presentation</h3><p>输出的结果是以什么方式展示呢，这个部分有几个参数可以练习下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ack-grep hello --pager=&#x27;less -R&#x27;    # 以less形式展示</span><br><span class="line">ack-grep hello --noheading      # 不在头上显示文件</span><br><span class="line">ack-grep hello --nocolor        # 不对匹配字符着色</span><br></pre></td></tr></table></figure><h3 id="File-finding"><a href="#File-finding" class="headerlink" title="File finding"></a>File finding</h3><p>没错，它可以查找文件，以省去你要不断的结合find和grep的麻烦，虽然在linux的思想是一个工具做好一件事。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ack-grep -f hello.py     # 查找全匹配文件</span><br><span class="line">ack-grep -g hello.py$    # 查找正则匹配文件</span><br><span class="line">ack-grep -g hello  --sort-files     # 查找然后排序</span><br></pre></td></tr></table></figure><h3 id="File-Inclusion-Exclusion"><a href="#File-Inclusion-Exclusion" class="headerlink" title="File Inclusion/Exclusion"></a>File Inclusion/Exclusion</h3><p>文件过滤，个人觉得这是一个很不错的功能。如果你曾经在搜索项目源码是不小心命中日志中的某个关键字的话，你会觉得这个有用。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ack-grep --python hello       # 查找所有python文件</span><br><span class="line">ack-grep -G hello.py$ hello   # 查找匹配正则的文件</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><span class="exturl" data-url="aHR0cHM6Ly9iZXlvbmRncmVwLmNvbS8=">ack官网<i class="fa fa-external-link-alt"></i></span></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;比grep好用的文本搜索工具&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas</summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="ack" scheme="http://yonghong.tech/tags/ack/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】alias</title>
    <link href="http://yonghong.tech/linux-command/alias/"/>
    <id>http://yonghong.tech/linux-command/alias/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:02:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>定义或显示别名。</p><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias [-p] [name[=value] ...]</span><br></pre></td></tr></table></figure><h2 id="主要用途"><a href="#主要用途" class="headerlink" title="主要用途"></a>主要用途</h2><ul><li>简化较长的命令。</li><li>定义一个或多个别名。</li><li>修改一个或多个已定义别名的值。</li><li>显示一个或多个已定义别名。</li><li>显示全部已定义的别名。</li></ul><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-p：显示全部已定义的别名。</span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>name（可选）：指定要（定义、修改、显示）的别名。</p><p>value（可选）：别名的值。</p><h3 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h3><p>alias返回true除非您要显示的别名未定义。</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 显示全部已定义的别名</span></span><br><span class="line">alias</span><br><span class="line">alias -p</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 显示已定义的别名（假设当前环境存在以下别名）</span></span><br><span class="line">alias ls</span><br><span class="line">alias ls grep</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 定义或修改别名的值</span></span><br><span class="line">alias ls=&#x27;ls --color=auto&#x27;</span><br><span class="line">alias ls=&#x27;ls --color=never&#x27; grep=&#x27;grep --color=never&#x27;</span><br></pre></td></tr></table></figure><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>直接在shell里设定的命令别名，在终端关闭或者系统重新启动后都会失效，如何才能永久有效呢？</p><p>使用编辑器打开<code>~/.bashrc</code>，在文件中加入别名设置，如：alias rm=’rm -i’，保存后执行<code>source ~/.bashrc</code>，这样就可以永久保存命令的别名了。</p><p>因为修改的是当前用户目录下的<code>~/.bashrc</code>文件，所以这样的方式只对当前用户有用。如果要对所有用户都有效，修改<code>/etc/bashrc</code>文件就可以了。</p><blockquote><p>请注意，以下内容可能与您实际使用的系统有出入:</p><p>在CentOS7下，这个文件是<code>/etc/bash.bashrc</code>。此外在CentOS7下，细看<code>~/.bashrc</code>文件，会发现有这样一段代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if [ -f ~/.bash_aliases ]; then</span><br><span class="line">  . ~/.bash_aliases</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>这个代码的意思就是如果存在那么就加载<code>.bash_aliases</code>文件，所以也可以在用户根目录下新建该文件用于单独存放命令别名设置。</p></blockquote><h2 id="错误用法"><a href="#错误用法" class="headerlink" title="错误用法"></a>错误用法</h2><ul><li><p>要显示的别名未定义。</p></li><li><p>当您定义（修改）别名的值的时候，由于值的字符串有空格但您没有用<strong>单引号扩起</strong>，那么会导致严重的问题：</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 为方便演示，删除全部别名</span></span><br><span class="line">unalias -a</span><br><span class="line"><span class="meta">#</span><span class="bash"> 没有用单引号扩起</span></span><br><span class="line">alias rm=rm -rf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行命令后报错 bash: <span class="built_in">alias</span>: -rf: not found</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 这时使用<span class="built_in">alias</span>查看rm的别名时返回 <span class="built_in">alias</span> rm=<span class="string">&#x27;rm&#x27;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 更具有迷惑性的例子</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 为方便演示，删除全部别名</span></span><br><span class="line">unalias -a</span><br><span class="line"><span class="meta">#</span><span class="bash"> 仍然没有用单引号括起</span></span><br><span class="line">alias ls=ls --color=never</span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行命令后看起来没有报错</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用<span class="built_in">alias</span>查看全部别名会发现运行结果如下：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">alias</span> --color=never</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">alias</span> ls=<span class="string">&#x27;ls&#x27;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">alias</span>处理时将它们看成了两组</span></span><br></pre></td></tr></table></figure><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><p>Q：如果我要显示一到多个别名，但不知道其中是否有未定义的该怎么办？</p><p>A：正常执行就是了，alias不会因为有一个未定义的别名就结束对剩余参数的执行。</p><p>Q：如果我这么定义<code>alias cd=&#39;ls&#39; ls=&#39;cd&#39;</code>，会有什么后果？</p><p>A：运行cd依然会切换目录，运行ls依然会列出文件夹的内容；不要这样定义。</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li><strong>执行脚本时请注意：</strong></li></ol><blockquote><p>使用<code>source</code>命令执行的bash脚本如果执行了<code>alias</code>或<code>unalias</code>命令，那么有可能会对终端环境的别名设置产生影响；终端环境的别名设置也可能改变运行结果；</p><p>通过<code>sh</code>方式调用的bash脚本或直接运行当前用户有执行权限的脚本不受终端环境的别名影响。</p></blockquote><ol start="2"><li><p>删除别名，请查看<code>unalias</code>命令。</p></li><li><p>建议您不要对<code>mv cp rm</code>等命令的别名设置危险的<code>-f</code>选项，比如<code>alias rm=&#39;rm -f&#39;</code>。</p></li><li><p>需要注意别名是否和其他命令有冲突的情况。</p></li><li><p>该命令是bash内建命令，相关的帮助信息请查看<code>help</code>命令。</p></li></ol><h3 id="其他参考链接"><a href="#其他参考链接" class="headerlink" title="其他参考链接"></a>其他参考链接</h3><p><span class="exturl" data-url="aHR0cHM6Ly9qaW5neWFuLmJhaWR1LmNvbS9hcnRpY2xlL2FjNmE5YTVlNjczODQyMmI2NTNlYWMwMS5odG1s">Linux命令详解：[8]alias创建自己的命令<i class="fa fa-external-link-alt"></i></span></p><!-- Linux命令行搜索引擎：https://jaywcjlove.github.io/linux-command/ -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;定义或显示别名。&lt;/p&gt;
&lt;h2 id=&quot;概要&quot;&gt;&lt;a href=&quot;#概要&quot; class=&quot;headerlink&quot; title=&quot;概要&quot;&gt;&lt;/a&gt;概要&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut</summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="alias" scheme="http://yonghong.tech/tags/alias/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】apachectl</title>
    <link href="http://yonghong.tech/linux-command/apachectl/"/>
    <id>http://yonghong.tech/linux-command/apachectl/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:02:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>Apache服务器前端控制工具</p><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p><strong>apachectl命令</strong> 是Apache的Web服务器前端控制工具，用以启动、关闭和重新启动Web服务器进程。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">apachectl</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><ul><li>configtest：检查设置文件中的语法是否正确；</li><li>fullstatus：显示服务器完整的状态信息；</li><li>graceful：重新启动Apache服务器，但不会中断原有的连接；</li><li>help：显示帮助信息；</li><li>restart：重新启动Apache服务器；</li><li>start：启动Apache服务器；</li><li>status：显示服务器摘要的状态信息；</li><li>stop：停止Apache服务器。</li></ul><!-- Linux命令行搜索引擎：https://jaywcjlove.github.io/linux-command/ -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Apache服务器前端控制工具&lt;/p&gt;
&lt;h2 id=&quot;补充说明&quot;&gt;&lt;a href=&quot;#补充说明&quot; class=&quot;headerlink&quot; title=&quot;补充说明&quot;&gt;&lt;/a&gt;补充说明&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;apachectl命令&lt;/strong&gt; 是Apache的We</summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="apachectl" scheme="http://yonghong.tech/tags/apachectl/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】apk</title>
    <link href="http://yonghong.tech/linux-command/apk/"/>
    <id>http://yonghong.tech/linux-command/apk/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:03:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Alpine Linux 下的包管理工具</p><h2 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apk install xxx</span><br><span class="line">apk search xxx # 支持正则</span><br><span class="line">apk info xxx # 查看包的详细信息</span><br><span class="line">apk show # list local package</span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载并删除 包</span></span><br><span class="line">apk del openssh openntp vim</span><br></pre></td></tr></table></figure><h3 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h3><p>upgrade命令升级系统已安装的所以软件包（一般包括内核），当然也可指定仅升级部分软件包（通过-u或–upgrade选择指定）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apk update # 更新最新本地镜像源</span><br><span class="line">apk upgrade # 升级软件</span><br><span class="line">apk add --upgrade busybox # 指定升级部分软件包</span><br></pre></td></tr></table></figure><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apk search # 查找所以可用软件包</span><br><span class="line">apk search -v # 查找所以可用软件包及其描述内容</span><br><span class="line">apk search -v &#x27;acf*&#x27; # 通过软件包名称查找软件包</span><br><span class="line">apk search -v -d &#x27;docker&#x27; # 通过描述文件查找特定的软件包</span><br></pre></td></tr></table></figure><h3 id="查看包信息"><a href="#查看包信息" class="headerlink" title="查看包信息"></a>查看包信息</h3><p>info命令用于显示软件包的信息。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apk info # 列出所有已安装的软件包</span><br><span class="line">apk info -a zlib # 显示完整的软件包信息</span><br><span class="line">apk info --who-owns /sbin/lbu # 显示指定文件属于的包</span><br></pre></td></tr></table></figure><h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><p>还是蛮喜欢 alpine 的，简单纯粹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">apk add iproute2 # ss vs netstat</span><br><span class="line">ss -ptl</span><br><span class="line">apk add drill # drill vs nslookup&amp;dig</span><br><span class="line"></span><br><span class="line">crond # 开启 cron 服务</span><br><span class="line">crontab -l -e</span><br><span class="line"></span><br><span class="line">apk add xxx</span><br><span class="line">apk search -v xxx</span><br><span class="line">apk info -a xxx</span><br><span class="line">apk info</span><br><span class="line">echo -e &quot;http://mirrors.aliyun.com/alpine/v3.6/main\nhttp://mirrors.aliyun.com/alpine/v3.6/community&quot; &gt; /etc/apk/repositories</span><br><span class="line">apk update</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> storage</span></span><br><span class="line">ibu # alpine local backup</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> network</span></span><br><span class="line">echo &quot;shortname&quot; &gt; /etc/hostname</span><br><span class="line">hostname -F /etc/hostname</span><br><span class="line">/etc/hosts</span><br><span class="line">/etc/resolv.conf # conig DNS</span><br><span class="line">modprobe ipv6 # enable ipv6</span><br><span class="line">echo &quot;ipv6&quot; &gt;&gt; /etc/modules</span><br><span class="line">iface # config interface</span><br><span class="line">apk add iptables ip6tables iptables-doc</span><br><span class="line">/etc/init.d/networking restart # activate change</span><br><span class="line">apke add iputils # IPv6 traceroute</span><br><span class="line">traceroute6 ipv6.google.com</span><br><span class="line">awall # alpine wall</span><br><span class="line"><span class="meta">#</span><span class="bash"> setup a openvpn server</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> post-install</span></span><br><span class="line">/etc/apk/repositories</span><br><span class="line">apk add cherokee --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ --allow-untrusted</span><br><span class="line">apk search -v --description &#x27;NTP&#x27; # show description and search from description</span><br><span class="line">apk info -a zlib</span><br><span class="line">apk info -vv|sort</span><br><span class="line">apk info -r -R # require / depency</span><br><span class="line">apk version -v -l &#x27;&lt;&#x27; # show available updates</span><br><span class="line">apk upgrade -U -a</span><br><span class="line">apk add -u xxx # update xxx</span><br><span class="line"></span><br><span class="line">/etc/runlevels # runlevel</span><br><span class="line">apk add openrc # use openrc for init system</span><br><span class="line">rc-update add xxx # set to start on</span><br><span class="line">rc-service xxx start # equal -&gt; /etc/init.d/xxx start</span><br><span class="line">rc-status</span><br><span class="line"></span><br><span class="line">adduser xxx</span><br><span class="line">passwd xxx</span><br><span class="line"></span><br><span class="line">apk add ansible # server</span><br><span class="line">ssh-keygen</span><br><span class="line">/etc/ansible/hosts</span><br><span class="line">apk add python # node</span><br><span class="line">ssh-copy-id</span><br><span class="line"></span><br><span class="line">apk add man man-pages mdocml-apropos less less-doc</span><br><span class="line">export PAGER=less</span><br><span class="line">/etc/rc.conf # /etc/rc.conf -&gt; funny character</span><br><span class="line">apk add bash bash-doc bash-completion # bash</span><br><span class="line">apk add util-linux pciutils usbutils coreutils binutils findutils grep # grep / awk</span><br><span class="line">apk add build-base gcc abuild binutils binutils-doc gcc-doc # compile</span><br><span class="line">apk add cmake cmake-doc extra-cmake-modules extra-cmake-modules-doc</span><br><span class="line">apk add ccache ccache-doc</span><br><span class="line"></span><br><span class="line">apk add docker # docker</span><br><span class="line">rc-update add docker boot</span><br><span class="line">rc-service docker start</span><br><span class="line">apk add py-pip</span><br><span class="line">pip install docker-compose</span><br><span class="line">ln -s /usr/bin/docker-compose /usr/bin/doc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> application</span></span><br><span class="line">apk add openssh # ssh</span><br><span class="line">rc-update add sshd</span><br><span class="line">/etc/init.d/sshd start</span><br><span class="line">/etc/sshd_config</span><br><span class="line">apk add dropbear # another openssh implementation</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Alpine Linux 下的包管理工具&lt;/p&gt;
&lt;h2 id=&quot;使用实例&quot;&gt;&lt;a href=&quot;#使用实例&quot; class=&quot;headerlink&quot; title=&quot;使用实例&quot;&gt;&lt;/a&gt;使用实例&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;tabl</summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="apk" scheme="http://yonghong.tech/tags/apk/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】apropos</title>
    <link href="http://yonghong.tech/linux-command/apropos/"/>
    <id>http://yonghong.tech/linux-command/apropos/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:03:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>在 whatis 数据库中查找字符串</p><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p><strong>apropos命令</strong> 在一些特定的包含系统命令的简短描述的数据库文件里查找关键字，然后把结果送到标准输出。 </p><p>如果你不知道完成某个特定任务所需要命令的名称，可以使用一个关键字通过Linux apropos实用程序来搜索它。该实用程序可以搜索关键字并且显示所有包含匹配项的man页面的简短描述。另外，使用man实用程序和-k（关键字）选项，可以得到和用Linux apropos实用程序相同的结果（实际上是相同的命令）。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apropos [-dalhvV] -e|-[w|-r] [-s section] [-m system[,...]] [-M path] [-L locale] -C [file] keyword ...</span><br></pre></td></tr></table></figure><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-d, --debug：输出调试信息。</span><br><span class="line">-v, --verbose：输出详细的警告信息。</span><br><span class="line">-r, -- regex：将每个keyword作为正则表达式解释。这是默认行为。每个keyword将匹配手册页和描述。</span><br><span class="line">-w, --wildcard：将每个keyword作为shell样式的通配符解释。</span><br><span class="line">-e, --exact：每个keyword将精确匹配手册页名字和描述。</span><br><span class="line">-a, --and：只显示匹配所有keyword的手册页和描述。默认显示匹配任何keyword的项。</span><br><span class="line">-l, --long：不根据终端宽度缩减输出。</span><br><span class="line">-s section, --section section：只查找指定的手册section。</span><br><span class="line">-m system[,...], --systems=system[,...]：用于查找其它操作系统的手册页。</span><br><span class="line">-M path, --manpath=path：指定从其它以冒号分隔的手册页层次查找。默认使用$MANPATH环境变量。这个选项覆盖$MANPATH的内容。</span><br><span class="line">-L locale, --locale=locale：apropos调用C函数setlocale来得到当前本地化信息，包括$LC_MESSAGE和$LANG。使用该选项提供一个locale字符串来临时更改本地化信息。</span><br><span class="line">-C file, --config-file=file：使用这个用户配置文件而不是默认的~/.manpath。</span><br><span class="line">-h, --help：打印帮助信息并退出。</span><br><span class="line">-V, --version：打印版本信息并退出。</span><br></pre></td></tr></table></figure><h3 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h3><p>返回0表示成功，1表示用法、语法或配置文件错误，2表示操作错误，16表示没有找到匹配的内容。</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# man -k who</span><br><span class="line">at.allow [at]        (5)  - determine who can submit jobs via at or batch</span><br><span class="line">at.deny [at]         (5)  - determine who can submit jobs via at or batch</span><br><span class="line">jwhois               (1)  - client for the whois service</span><br><span class="line">jwhois              (rpm) - Internet whois/nicname client.</span><br><span class="line">Net::LDAP::Extension::whoami (3pm)  - LDAP Who am I? Operation</span><br><span class="line">w                    (1)  - Show who is logged on and what they are doing</span><br><span class="line">who                  (1p)  - display who is on the system</span><br><span class="line">who                  (1)  - show who is logged on</span><br><span class="line">whoami               (1)  - print effective userid</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# apropos who</span><br><span class="line">at.allow [at]        (5)  - determine who can submit jobs via at or batch</span><br><span class="line">at.deny [at]         (5)  - determine who can submit jobs via at or batch</span><br><span class="line">jwhois               (1)  - client for the whois service</span><br><span class="line">jwhois              (rpm) - Internet whois/nicname client.</span><br><span class="line">Net::LDAP::Extension::WhoAmI (3pm)  - LDAP Who am I? Operation</span><br><span class="line">w                    (1)  - Show who is logged on and what they are doing</span><br><span class="line">who                  (1p)  - display who is on the system</span><br><span class="line">who                  (1)  - show who is logged on</span><br><span class="line">whoami               (1)  - print effective userid</span><br></pre></td></tr></table></figure><p>查找手册页名字和描述中包含emacs和vi的手册页：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apropos -a emacs vi</span><br></pre></td></tr></table></figure><!-- Linux命令行搜索引擎：https://jaywcjlove.github.io/linux-command/ -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在 whatis 数据库中查找字符串&lt;/p&gt;
&lt;h2 id=&quot;补充说明&quot;&gt;&lt;a href=&quot;#补充说明&quot; class=&quot;headerlink&quot; title=&quot;补充说明&quot;&gt;&lt;/a&gt;补充说明&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;apropos命令&lt;/strong&gt; 在一些特定的包含系</summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="apropos" scheme="http://yonghong.tech/tags/apropos/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】apt-get</title>
    <link href="http://yonghong.tech/linux-command/apt-get/"/>
    <id>http://yonghong.tech/linux-command/apt-get/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:04:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Debian Linux发行版中的APT软件包管理工具</p><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p><strong>apt-get命令</strong> 是Debian Linux发行版中的APT软件包管理工具。所有基于Debian的发行都使用这个包管理系统。deb包可以把一个应用的文件包在一起，大体就如同Windows上的安装文件。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get [OPTION] PACKAGE</span><br></pre></td></tr></table></figure><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">apt-get install 安装新包</span><br><span class="line">apt-get remove 卸载已安装的包（保留配置文件）</span><br><span class="line">apt-get purge 卸载已安装的包（删除配置文件）</span><br><span class="line">apt-get update 更新软件包列表</span><br><span class="line">apt-get upgrade 更新所有已安装的包</span><br><span class="line">apt-get autoremove 卸载已不需要的包依赖</span><br><span class="line">apt-get dist-upgrade 自动处理依赖包升级</span><br><span class="line">apt-get autoclean 将已经删除了的软件包的.deb安装文件从硬盘中删除掉</span><br><span class="line">apt-get clean 删除软件包的安装包</span><br><span class="line"></span><br><span class="line">-c：指定配置文件。</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><ul><li>管理指令：对APT软件包的管理操作；</li><li>软件包：指定要操纵的软件包。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>使用apt-get命令的第一步就是引入必需的软件库，Debian的软件库也就是所有Debian软件包的集合，它们存在互联网上的一些公共站点上。把它们的地址加入，apt-get就能搜索到我们想要的软件。/etc/apt/sources.list是存放这些地址列表的配置文件，其格式如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb web或[ftp地址] [发行版名字] main/contrib/non-[free]</span><br></pre></td></tr></table></figure><p>我们常用的Ubuntu就是一个基于Debian的发行，我们使用apt-get命令获取这个列表，以下是我整理的常用命令：</p><p>在修改<code>/etc/apt/sources.list</code>或者<code>/etc/apt/preferences</code>之后运行该命令。此外您需要定期运行这一命令以确保您的软件包列表是最新的：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><p>安装一个新软件包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install packagename</span><br></pre></td></tr></table></figure><p>卸载一个已安装的软件包（保留配置文件）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get remove packagename</span><br></pre></td></tr></table></figure><p>卸载一个已安装的软件包（删除配置文件）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get –purge remove packagename</span><br></pre></td></tr></table></figure><p>会把已装或已卸的软件都备份在硬盘上，所以如果需要空间的话，可以让这个命令来删除你已经删掉的软件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get autoclean apt</span><br></pre></td></tr></table></figure><p>这个命令会把安装的软件的备份也删除，不过这样不会影响软件的使用的：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get clean</span><br></pre></td></tr></table></figure><p>更新所有已安装的软件包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get upgrade</span><br></pre></td></tr></table></figure><p>将系统升级到新版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get dist-upgrade</span><br></pre></td></tr></table></figure><p>定期运行这个命令来清除那些已经卸载的软件包的.deb文件。通过这种方式，您可以释放大量的磁盘空间。如果您的需求十分迫切，可以使用<code>apt-get clean</code>以释放更多空间。这个命令会将已安装软件包裹的.deb文件一并删除。大多数情况下您不会再用到这些.debs文件，因此如果您为磁盘空间不足 而感到焦头烂额，这个办法也许值得一试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get autoclean</span><br></pre></td></tr></table></figure><!-- Linux命令行搜索引擎：https://jaywcjlove.github.io/linux-command/ -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Debian Linux发行版中的APT软件包管理工具&lt;/p&gt;
&lt;h2 id=&quot;补充说明&quot;&gt;&lt;a href=&quot;#补充说明&quot; class=&quot;headerlink&quot; title=&quot;补充说明&quot;&gt;&lt;/a&gt;补充说明&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;apt-get命令&lt;/strong&gt; </summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="apt-get" scheme="http://yonghong.tech/tags/apt-get/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】apt-key</title>
    <link href="http://yonghong.tech/linux-command/apt-key/"/>
    <id>http://yonghong.tech/linux-command/apt-key/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:04:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>管理Debian Linux系统中的软件包密钥</p><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p><strong>apt-key命令</strong> 用于管理Debian Linux系统中的软件包密钥。每个发布的deb包，都是通过密钥认证的，apt-key用来管理密钥。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-key(参数)</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>操作指令：APT密钥操作指令。</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-key list          # 列出已保存在系统中key。</span><br><span class="line">apt-key add keyname   # 把下载的key添加到本地trusted数据库中。</span><br><span class="line">apt-key del keyname   # 从本地trusted数据库删除key。</span><br><span class="line">apt-key update        # 更新本地trusted数据库，删除过期没用的key。</span><br></pre></td></tr></table></figure><!-- Linux命令行搜索引擎：https://jaywcjlove.github.io/linux-command/ -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;管理Debian Linux系统中的软件包密钥&lt;/p&gt;
&lt;h2 id=&quot;补充说明&quot;&gt;&lt;a href=&quot;#补充说明&quot; class=&quot;headerlink&quot; title=&quot;补充说明&quot;&gt;&lt;/a&gt;补充说明&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;apt-key命令&lt;/strong&gt; 用于管理</summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="apt-key" scheme="http://yonghong.tech/tags/apt-key/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】apt-sortpkgs</title>
    <link href="http://yonghong.tech/linux-command/apt-sortpkgs/"/>
    <id>http://yonghong.tech/linux-command/apt-sortpkgs/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:05:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Debian Linux下对软件包索引文件进行排序的工具</p><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p><strong>apt-sortpkgs命令</strong> 是Debian Linux下对软件包索引文件进行排序的简单工具。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-sortpkgs(选项)(参数)</span><br></pre></td></tr></table></figure><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-s：使用源索引字段排序；</span><br><span class="line">-h：显示帮助信息。</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>文件：指定要排序的包含debian包信息的索引文件。</p><!-- Linux命令行搜索引擎：https://jaywcjlove.github.io/linux-command/ -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Debian Linux下对软件包索引文件进行排序的工具&lt;/p&gt;
&lt;h2 id=&quot;补充说明&quot;&gt;&lt;a href=&quot;#补充说明&quot; class=&quot;headerlink&quot; title=&quot;补充说明&quot;&gt;&lt;/a&gt;补充说明&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;apt-sortpkgs命令&lt;/st</summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="apt-sortpkgs" scheme="http://yonghong.tech/tags/apt-sortpkgs/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】aptitude</title>
    <link href="http://yonghong.tech/linux-command/aptitude/"/>
    <id>http://yonghong.tech/linux-command/aptitude/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:05:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>Debian Linux系统中软件包管理工具</p><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p><strong>aptitude命令</strong> 与apt-get命令一样，都是Debian Linux及其衍生系统中功能极其强大的包管理工具。与apt-get不同的是，aptitude在处理依赖问题上更佳一些。举例来说，aptitude在删除一个包时，会同时删除本身所依赖的包。这样，系统中不会残留无用的包，整个系统更为干净。它通过文本操作菜单和命令两种方式管理软件包。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aptitude(选项)(参数)</span><br></pre></td></tr></table></figure><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-h：显示帮助信息；</span><br><span class="line">-d：仅下载软件包，不执行安装操作；</span><br><span class="line">-P：每一步操作都要求确认；</span><br><span class="line">-y：所有问题都回答“yes”；</span><br><span class="line">-v：显示附加信息；</span><br><span class="line">-u：启动时下载新的软件包列表。</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>操作命令：用户管理软件包的操作命令。</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>以下是我总结的一些常用aptitude命令，仅供参考：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">aptitude update            # 更新可用的包列表</span><br><span class="line">aptitude upgrade           # 升级可用的包</span><br><span class="line">aptitude dist-upgrade      # 将系统升级到新的发行版</span><br><span class="line">aptitude install pkgname   # 安装包</span><br><span class="line">aptitude remove pkgname    # 删除包</span><br><span class="line">aptitude purge pkgname     # 删除包及其配置文件</span><br><span class="line">aptitude search string     # 搜索包</span><br><span class="line">aptitude show pkgname      # 显示包的详细信息</span><br><span class="line">aptitude clean             # 删除下载的包文件</span><br><span class="line">aptitude autoclean         # 仅删除过期的包文件</span><br></pre></td></tr></table></figure><p>当然，你也可以在文本界面模式中使用 aptitude。</p><!-- Linux命令行搜索引擎：https://jaywcjlove.github.io/linux-command/ -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Debian Linux系统中软件包管理工具&lt;/p&gt;
&lt;h2 id=&quot;补充说明&quot;&gt;&lt;a href=&quot;#补充说明&quot; class=&quot;headerlink&quot; title=&quot;补充说明&quot;&gt;&lt;/a&gt;补充说明&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;aptitude命令&lt;/strong&gt; 与apt</summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="aptitude" scheme="http://yonghong.tech/tags/aptitude/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】ar</title>
    <link href="http://yonghong.tech/linux-command/ar/"/>
    <id>http://yonghong.tech/linux-command/ar/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:06:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>建立或修改备存文件，或是从备存文件中抽取文件</p><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p><strong>ar命令</strong> 是一个建立或修改备存文件，或是从备存文件中抽取文件的工具，ar可让您集合许多文件，成为单一的备存文件。在备存文件中，所有成员文件皆保有原来的属性与权限</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ar [-]&#123;dmpqrtx&#125;[abcfilNoPsSuvV] [membername] [count] archive files...</span><br><span class="line">Usage: ar [emulation options] [-]&#123;dmpqrstx&#125;[abcDfilMNoPsSTuvV] [--plugin &lt;name&gt;] [member-name] [count] archive-file file...</span><br><span class="line">       ar -M [&lt;mri-脚本]</span><br></pre></td></tr></table></figure><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">ar 允许你 在第一个 命令行 参数中 以任意 顺序 混合 指定 操作码p 和修饰符mod .</span><br><span class="line"></span><br><span class="line">只要你 愿意, 也可以 用破折号 作为 命令行 第一个 参数的 开始.</span><br><span class="line"></span><br><span class="line">p 关键字 指明 要执行的 操作, 只能 指明为 如下 之一:</span><br><span class="line"></span><br><span class="line">d      从档案中删除 模块. 通过files 指明 要删除的 模块的 名称; 如果 没有 指出 要删除的  文件  名称,  档案不会  改变  任何</span><br><span class="line">      内容.</span><br><span class="line"></span><br><span class="line">      如果 给出了&#x27;v&#x27; 修饰符,ar 会例出 它删除的 每一个 模块.</span><br><span class="line"></span><br><span class="line">m      用此 操作 在档案中移动 成员.</span><br><span class="line">      如果 某个 符号名 在档案的 多个 成员中 有定义, 那么 程序 怎样 连接 档案 文件 得到的 结果 可能是 不同的.</span><br><span class="line">      如果  没有为m 指定 修饰符, 由files 指出的 成员 将移动到 档案的末尾 ; 可以 通过 `a&#x27;, `b&#x27; 或 `i&#x27; 等修饰符, 指定 成员</span><br><span class="line">      移动的 具体 位置.</span><br><span class="line"></span><br><span class="line">p      在标准 输出上 打印 档案中 指定的 成员.  如果 给出了`v&#x27; 修饰符, 在 打印 成员 内容 之前, 先打印 成员的 名字.</span><br><span class="line">      如果没有 指明files 参数, 档案中 所有的 成员 都会被 打印 出来.</span><br><span class="line"></span><br><span class="line">q      快速 追加; 增加 files 到 archive 的末尾, 不进行 替换 检查.</span><br><span class="line">      修饰符 `a&#x27; `b&#x27; 和 `i&#x27;不 影响此 操作, 新成员 始终 追加到 档案的 末尾处.</span><br><span class="line">      修饰符 `v&#x27; 可以使 ar 列出 它追加的 所有文件.</span><br><span class="line">      由于 本功能 是用于 快速操作, 即使 档案中 有 符号表 索引 也不 进行 更新; 可以 使用 `ar s&#x27; 或 ranlib 明确 要求  更新</span><br><span class="line">      这些索引.</span><br><span class="line"></span><br><span class="line">      在为快速 追加 重建 索引时,由于 有 太多 不同的 系统, 所以 GNU ar 采用 `q&#x27; 作为 `r&#x27;的一个 同义字.</span><br><span class="line"></span><br><span class="line">r      把文件  files  插入 archive ( 替换 ). 本操作与 `q&#x27; 是不同的, 如果 档案中 已有的 某个 成员与 插入 文件的 名称 相同,</span><br><span class="line">      此成员 将被删除.</span><br><span class="line">      如果 不存在 名称为 files 的文件, ar 显示 一个 错误 消息, 并且 保留 档案中 已有的 同名 成员.</span><br><span class="line">      缺省情况下, 新成员 增加到 挡案的 末尾; 可以 通过 使用 `a&#x27; `b&#x27; 或 `i&#x27; 等修饰符 指定 相对于 已有 成员的 位置.</span><br><span class="line">      通过 使用 `v&#x27; 修饰符 会为每个 插入的 文件 产生 一行 输出, 根据 输出中的 字符 `a&#x27; 或 `r&#x27; 可以 表明 该文件  是追加的</span><br><span class="line">      (没有 删除 以前的成员) 还是 替换的.</span><br><span class="line"></span><br><span class="line">t      显示  一个 archive 档案 所包含 内容的 列表 , 或 档案中的 由 files 指出的 文件 列表.  通常 只显示 成员的 名称, 如果</span><br><span class="line">      使用 `v&#x27; 修饰符, 可以 得到 成员的 权限, 时间属性, 属主, 组和 大小.</span><br><span class="line"></span><br><span class="line">      如果 没有 指出 files, 档案中的 所有 文件 都会 列出.</span><br><span class="line"></span><br><span class="line">      如果 档案中 (称为 `b.a&#x27;) 有多个 同名 成员 (称为 `fie&#x27;), `ar t b.a fie&#x27; 仅仅 列出 第一个; 要看到 它们的 全部,  必须</span><br><span class="line">      要求 完整的 列表 —在本例中是 `ar t b.a&#x27;.</span><br><span class="line"></span><br><span class="line">x      从档案中 抽取  成员 (名称为 files) .  如果 使用 `v&#x27; 修饰符, ar 会列出 它抽取的 每一个 文件的 名字.</span><br><span class="line">      如果没有给出 files, 抽取 档案中 所有的 文件.</span><br><span class="line"></span><br><span class="line">可以在 操作符 p 后紧随 一定数量的 修饰符 mod 以指明 操作的 各种 行为.</span><br><span class="line"></span><br><span class="line">a      增加 文件到 档案中 已有 成员 之后  , 如果 使用了 修饰符 a, 必须在 档案 名称 archive 之前 以 membername 参数的 形式</span><br><span class="line">      给出 档案中 已有 成员的 名字.</span><br><span class="line"></span><br><span class="line">b      增加 文件到 档案中 已有 成员 之前  , 如果 使用了 修饰符 b, 必须在 档案 名称 archive 之前 以 membername 参数的 形式</span><br><span class="line">      给出 档案中 已有 成员的 名字.  (和修饰符 `i&#x27; 相同).</span><br><span class="line"></span><br><span class="line">c      建立    档案.  指定的 档案 archive 始终 会被建立, 如果 你要求 执行的是 更新, 通过 此修饰符 建立 档案时 会给出 一个</span><br><span class="line">      警告.</span><br><span class="line">      </span><br><span class="line">f      截短 档案成员的 名字.  ar 通常 允许 任意 长度的 文件名, 但这会 导致 与某些 系统上的 ar 出现 兼容性  问题,  使用  f</span><br><span class="line">      修饰符 可以 在往档案中 追加 文件时 把名字 截短.</span><br><span class="line"></span><br><span class="line">i      插入 文件到 档案中 已有 成员 之前  , 如果 使用了 修饰符 i, 必须在 档案 名称 archive 之前 以 membername 参数的 形式</span><br><span class="line">      给出 档案中 已有 成员的 名字.  (与修饰符 `b&#x27; 相同).</span><br><span class="line"></span><br><span class="line">l      接受此修饰符, 但不起作用.</span><br><span class="line"></span><br><span class="line">N      使用 count 参数. 本修饰符 用于 在档案中 有多个 同名 成员的 情况.  删除 或抽取 档案中 给定 名字的第 count 个实例.</span><br><span class="line"></span><br><span class="line">o      抽取 成员时 保留 他们 原始的  时间属性. 如果 没有 此修饰符, 文件以抽取 的时间 作为 它的时间 属性.</span><br><span class="line"></span><br><span class="line">P      匹配 档案中的 名字时 使用 完整的 路径名.  ar 不能 建立 使用 完整 路径名的 档案  (这不符合  POSIX  标准),  但其它的</span><br><span class="line">      档案  工具  能够建立, 本选项 会使 ar 在抽取 由其它 工具 建立的 档案 文件时, 使用完整的 路径名 去匹配 档案中 成员的</span><br><span class="line">      名字.</span><br><span class="line"></span><br><span class="line">s      即使 没有对 档案 进行 改变, 用本 修饰符 也可以 往档案中 写一个 目标 文件的 索引 或更新 已经 存在的  索引.   可以与</span><br><span class="line">      其它 操作 一起 使用 本修饰符, 也可以 单独使用.  对一个 档案 执行 `ar s&#x27; 与执行 `ranlib&#x27; 等价.</span><br><span class="line"></span><br><span class="line">S      不生成  档案的 符号表. 这可以 加速 建立 大的档案 文件的 过程,但这样 建立的 档案 不能被 连接器 使用, 为建立 符号表,</span><br><span class="line">      在最后 执行 `ar&#x27; 时应该 不用 `S&#x27; 修饰符, 或者 对档案 执行 一次 `ranlib&#x27; .</span><br><span class="line"></span><br><span class="line">u      通常ar r... 把所有 列出的 文件 插入到 档案中, 如果 希望 仅仅 插入比 档案中 已有 成员 更新的  文件时,  就应该  使用</span><br><span class="line">      此修饰符.   `u&#x27;  修饰符  仅允许  与 `r&#x27; (替换) 操作 一起 使用.  某些 情况下, 由于 用 `q&#x27; 操作 比较 文件的 时间属性</span><br><span class="line">      会失去 速度上的 优势, 所以 不允许 执行 `qu&#x27; 组合操作.</span><br><span class="line"></span><br><span class="line">v      使用本修饰符可以进行 冗余的 操作。附加了此修饰符时，很多操作会显示 更多的消息，如处理的文件名等。</span><br><span class="line">V      显示 ar 的版本号。</span><br></pre></td></tr></table></figure><p>选项参数 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--plugin &lt;p&gt; - load the specified plugin</span><br></pre></td></tr></table></figure><p>ar：支持的目标： elf64-x86-64 elf32-i386 elf32-x86-64 a.out-i386-linux pei-i386 pei-x86-64 elf64-l1om elf64-k1om elf64-little elf64-big elf32-little elf32-big plugin srec symbolsrec verilog tekhex binary ihex</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>打包文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ls   # 显示当前目录文件   </span><br><span class="line">a.cb.c d.c   install.log  qte</span><br><span class="line">anaconda-ks.cfg c.c Desktop </span><br><span class="line"></span><br><span class="line">[root@localhost ~]# ar rv one.bak a.c b.c  # 打包 a.c b.c文件 </span><br><span class="line">ar: 正在创建 one.bak</span><br><span class="line">a - a.c</span><br><span class="line">a - b.c</span><br></pre></td></tr></table></figure><p>打包多个文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ar rv two.bak *.c  // 打包以.c结尾的文件  </span><br><span class="line">ar: 正在创建 two.bak</span><br><span class="line">a - a.c</span><br><span class="line">a - b.c</span><br><span class="line">a - c.c</span><br><span class="line">a - d.c</span><br></pre></td></tr></table></figure><p>显示打包文件的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ar t two.bak    </span><br><span class="line">a.c</span><br><span class="line">b.c</span><br><span class="line">c.c</span><br><span class="line">d.c</span><br></pre></td></tr></table></figure><p>删除打包文件的成员文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ar d two.bak a.c b.c c.c  </span><br><span class="line">[root@localhost ~]# ar t two.bak       </span><br><span class="line">d.c</span><br></pre></td></tr></table></figure><!-- Linux命令行搜索引擎：https://jaywcjlove.github.io/linux-command/ -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;建立或修改备存文件，或是从备存文件中抽取文件&lt;/p&gt;
&lt;h2 id=&quot;补充说明&quot;&gt;&lt;a href=&quot;#补充说明&quot; class=&quot;headerlink&quot; title=&quot;补充说明&quot;&gt;&lt;/a&gt;补充说明&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;ar命令&lt;/strong&gt; 是一个建立或修改备存</summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="ar" scheme="http://yonghong.tech/tags/ar/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】arch</title>
    <link href="http://yonghong.tech/linux-command/arch/"/>
    <id>http://yonghong.tech/linux-command/arch/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:06:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>显示当前主机的硬件架构类型</p><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch [OPTION]...</span><br></pre></td></tr></table></figure><h2 id="主要用途"><a href="#主要用途" class="headerlink" title="主要用途"></a>主要用途</h2><ul><li>打印机器架构信息；<code>arch</code> 命令输出结果有：i386、i486、i586、alpha、sparc、arm、m68k、mips、ppc、i686等。</li></ul><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--help       显示帮助信息并退出。</span><br><span class="line">--version    显示版本信息并退出。</span><br></pre></td></tr></table></figure><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# arch</span><br><span class="line">x86_64</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li><p>该命令等价于 <code>uname -m</code>。</p></li><li><p>该命令是<code>GNU coreutils</code>包中的命令，相关的帮助信息请查看<code>man -s 1 arch</code>，<code>info coreutils &#39;arch invocation&#39;</code>。</p></li></ol><!-- Linux命令行搜索引擎：https://jaywcjlove.github.io/linux-command/ -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;显示当前主机的硬件架构类型&lt;/p&gt;
&lt;h2 id=&quot;概要&quot;&gt;&lt;a href=&quot;#概要&quot; class=&quot;headerlink&quot; title=&quot;概要&quot;&gt;&lt;/a&gt;概要&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class</summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="arch" scheme="http://yonghong.tech/tags/arch/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】arj</title>
    <link href="http://yonghong.tech/linux-command/arj/"/>
    <id>http://yonghong.tech/linux-command/arj/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:07:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>用于创建和管理.arj压缩包</p><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p><strong>arj命令</strong> 是 <code>.arj</code> 格式的压缩文件的管理器，用于创建和管理 <code>.arj</code> 压缩包。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arj(参数)</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><ul><li>操作指令：对  <code>.arj</code> 压缩包执行的操作指令；</li><li>压缩包名称：指定要操作的arj压缩包名称。</li></ul><!-- Linux命令行搜索引擎：https://jaywcjlove.github.io/linux-command/ -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;用于创建和管理.arj压缩包&lt;/p&gt;
&lt;h2 id=&quot;补充说明&quot;&gt;&lt;a href=&quot;#补充说明&quot; class=&quot;headerlink&quot; title=&quot;补充说明&quot;&gt;&lt;/a&gt;补充说明&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;arj命令&lt;/strong&gt; 是 &lt;code&gt;.arj&lt;/cod</summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="arj" scheme="http://yonghong.tech/tags/arj/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】arp</title>
    <link href="http://yonghong.tech/linux-command/arp/"/>
    <id>http://yonghong.tech/linux-command/arp/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:07:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>arp 命令用于显示和修改 IP 到 MAC 转换表</p><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p><strong>arp 命令</strong> 是 Address Resolution Protocol，地址解析协议，是通过解析网络层地址来找寻数据链路层地址的一个网络协议包中极其重要的网络传输协议。而该命令可以显示和修改 arp 协议解析表中的缓冲数据。</p><p>这个核心协议模块实现RFC826中定义的 Address Resolution Protocol [译注：即TCP/IP的第三层到第一层的地址转换协议]，用于在直接相连的网络中换第二层硬件地址和 Ipv4 协议地址之间的转换。 用户除非想对其进行配置，否则一般不会直接操作这个模块。</p><p>实际上，它提供对核心中其它协议的服务。</p><p>用户进程可以使用 packet(7) 的 sockets，收到 ARP 包（译注：一译分组）。 还有一种机制是使用 netlink(7) sockets，在用户空间管理 ARP 缓存的机制。我们也可以通过 ioctl (2) 控制任意 PF_INET socket上的 ARP 表</p><p>ARP 模块维护一个硬件地址到协议地址映射的缓存。这个缓存有大小限制，所以不常用的和旧的记录（Entry）将被垃圾收集器清除（garbage-collected），垃圾收集器永远不能删除标为永久的记录。我们可以使用ioctls直接操纵缓冲， 并且其性状可以用下面定义的 sysctl 调节。</p><p>如果在限定的时间（见下面的sysctl）内，一条现存映射没有肯定反馈时， 则认为相邻层的缓存记录失效。 为了再次向目标发送数据，ARP将首先试着询问本地arp进程 app_solicit 次，获取更新了的 MAC（介质访问控制）地址。 如果失败，并且旧的MAC地址是已知的，则发送 ucast_solicit 次的 unicast probe。如果仍然失败，则将向网络广播一个新的ARP请求,此时要 有待发送数据的队列</p><p>如果 Linux 接到一个地址请求，而且该地址指向 Linux 转发的地址，并且接收接口打开了代理 arp 时，Linux 将自动添加一条非永久的代理 arp 记录；如果存在拒绝到目标的路由，则不添加代理 arp 记录。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp（选项）（参数）</span><br></pre></td></tr></table></figure><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-a # 主机 ：显示 arp 缓冲区的所有条目；</span><br><span class="line">-H # 地址类型 ：指定 arp 指令使用的地址类型；</span><br><span class="line">-d # 主机 ：从 arp 缓冲区中删除指定主机的 arp 条目；</span><br><span class="line">-D # 使用指定接口的硬件地址；</span><br><span class="line">-e # 以 Linux 的显示风格显示 arp 缓冲区中的条目；</span><br><span class="line">-i # 接口 ：指定要操作 arp 缓冲区的网络接口；</span><br><span class="line">-s # 主机 MAC 地址 ：设置指定的主机的 IP 地址与 MAC 地址的静态映射；</span><br><span class="line">-n # 以数字方式显示 arp 缓冲区中的条目；</span><br><span class="line">-v # 显示详细的 arp 缓冲区条目，包括缓冲区条目的统计信息；</span><br><span class="line">-f # 文件 ：设置主机的 IP 地址与 MAC 地址的静态映射。</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>主机：查询 arp 缓冲区中指定主机的 arp 条目。</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>显示arp 缓冲区内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# arp -v</span><br><span class="line">Address                  HWtype  HWaddress           Flags Mask            Iface</span><br><span class="line">192.168.0.134            ether   00:21:5E:C7:4D:88   C                     eth1</span><br><span class="line">115.238.144.129          ether   38:22:D6:2F:B2:F1   C                     eth0</span><br><span class="line">Entries: 2      Skipped: 0      Found: 2</span><br></pre></td></tr></table></figure><p>添加静态 arp 映射</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arp -s IP MAC-ADDRESS</span><br><span class="line">arp -s 192.168.1.1 00:b1:b2:b3:b4:b5</span><br></pre></td></tr></table></figure><p>删除 arp 缓存条目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp -d 192.168.1.1</span><br></pre></td></tr></table></figure><!-- Linux 命令行搜索引擎：https://jaywcjlove.github.io/linux-command/ -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;arp 命令用于显示和修改 IP 到 MAC 转换表&lt;/p&gt;
&lt;h2 id=&quot;补充说明&quot;&gt;&lt;a href=&quot;#补充说明&quot; class=&quot;headerlink&quot; title=&quot;补充说明&quot;&gt;&lt;/a&gt;补充说明&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;arp 命令&lt;/strong&gt; 是 Ad</summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="arp" scheme="http://yonghong.tech/tags/arp/"/>
    
  </entry>
  
  <entry>
    <title>【Linux 命令】arpd</title>
    <link href="http://yonghong.tech/linux-command/arpd/"/>
    <id>http://yonghong.tech/linux-command/arpd/</id>
    <published>2020-09-25T00:00:00.000Z</published>
    <updated>2020-09-25T00:08:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>收集免费ARP信息</p><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p><strong>arpd命令</strong> 是用来收集免费arp信息的一个守护进程，它将收集到的信息保存在磁盘上或者在需要时，提供给内核用户用于避免多余广播。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpd(选项)(参数)</span><br></pre></td></tr></table></figure><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-l：将arp数据库输出到标准输出设备显示并退出；</span><br><span class="line">-f：指定读取和加载arpd数据库的文本文件，文件的格式与“-l”输出信息类似；</span><br><span class="line">-b：指定arpd数据库文件，默认的位置为“/var/lib/arpd.db”；</span><br><span class="line">-a：指定目标被认为死掉前查询的次数；</span><br><span class="line">-k：禁止通过内核发送广播查询；</span><br><span class="line">-n：设定缓冲失效时间。</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>网络接口：指定网络接口。</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>启动arpd进程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpd -b /var/tmp/arpd.db</span><br></pre></td></tr></table></figure><p>运行一段时间后，查看结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpd -l -b /var/tmp/arpd.db</span><br></pre></td></tr></table></figure><!-- Linux命令行搜索引擎：https://jaywcjlove.github.io/linux-command/ -->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;收集免费ARP信息&lt;/p&gt;
&lt;h2 id=&quot;补充说明&quot;&gt;&lt;a href=&quot;#补充说明&quot; class=&quot;headerlink&quot; title=&quot;补充说明&quot;&gt;&lt;/a&gt;补充说明&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;arpd命令&lt;/strong&gt; 是用来收集免费arp信息的一个守护进程，它</summary>
      
    
    
    
    <category term="Linux 命令" scheme="http://yonghong.tech/categories/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="http://yonghong.tech/tags/Linux/"/>
    
    <category term="Linux Command" scheme="http://yonghong.tech/tags/Linux-Command/"/>
    
    <category term="Linux 命令" scheme="http://yonghong.tech/tags/Linux-%E5%91%BD%E4%BB%A4/"/>
    
    <category term="arpd" scheme="http://yonghong.tech/tags/arpd/"/>
    
  </entry>
  
</feed>
